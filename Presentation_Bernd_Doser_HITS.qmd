---
title: Spherinator & HiPSter
subtitle: SPACE Training Webinar
author: Bernd Doser (HITS)
date: 2024/05/07
date-format: "MMMM YYYY"
# institute: "[HITS gGmbH](https://h-its.org)"
title-slide-attributes:
  data-background-image: images/SPACE_title_slide.png
format:
  revealjs:
    logo: images/HITS_RGB_eng.jpg
    footer: "Spherinator & HiPSter (B. Doser)"
    slide-number: true
    highlight-style: a11y
    bibliography: references.bib
    width: 1300
    template-partials:
      - title-slide.html
  pptx:
    reference-doc: Space_template_v04_20240216.pptx
---

## Outline {background-image="images/aladin-lite-background.png"}

- Spherinator: The Model
- Spherinator: Model training
  - Development environment
  - Lightning CLI
- HiPSter: The Inference
- Summary and Outlook


## Spherinator: Euclidean vs (Hyper-)spherical

Euclidean latent spaces -> Gaussian reference distribution

Hyperspherical latent spaces [@DeCao2020] -> Uniform reference distribution

Kullback-Leibler divergence (KL)

$$\begin{aligned}
L = L_{recon} + \lambda \cdot L_{KL}
\end{aligned}$$


## Power Spherical Distribution

$$\begin{aligned}
p_{X}(x; \mu, \kappa) = N_{X}(\kappa, d)^{-1}(1 + \mu^{\top}x)^{\kappa}
\end{aligned}$$


:::: {.columns}

::: {.column width="40%"}
$d$: dimension

$\mu$: direction

$\kappa$: concentration

$N_{X}$: normalization factor
:::

::: {.column width="60%"}
![](images/power_spherical.png)
:::

::::

::: aside
Source: [@DeCao2020]
:::


## Development Environment

- Project management at [GitHub](https://github.com/HITS-AIN/Spherinator)
- Python dependency management with [Poetry]()
- Automated dependency updates with [Dependabot]()
  - Pull request (PR) for each update
- Continuous integration with [GitHub Action](https://github.com/HITS-AIN/Spherinator/blob/main/.github/workflows/python-package.yml)
  - Static code analysis
  - Unit tests
  - PR: Check before merge


## Weights&Biases: AI Developer Platform

- Tracking experiments
![](images/wandb_illustris_loss.png)
- Collaborative project management (teams, reports) 
- Model registry (publish for production)
- Hyperparameter optimization
- Free for academic research



## PyTorch Lightning

Experiments defined in yaml file:

```yaml
{{< include _illustris_power_simplified.yaml >}}
```


## Spherinator: Step by Step

- Clone repository
```
git clone https://github.com/HITS-AIN/Spherinator.git [--branch v0.2]
```
- Install all dependencies and change into virtual environment
```
poetry install
poetry shell
```
- Start training with 
```
spherinator.py fit -c config.yaml
```

## Visualization with Aladin(-Lite) {.nostretch}

HiPS - Hierarchical Progressive Survey

![](images/HEALPix.png){width="900"}

::: aside
Source: [@Fernique_2015]
:::


## HiPSter Workflow {.nostretch}

- Python workflow for inference
![](images/HiPSter.drawio.svg){.absolute left=0 width=1800}


## Summary and Outlook

- Prototyp public available [space.h-its.org](https://space.h-its.org)
- Evaluation of Encoder, Decoder, Loss function to improve 
- Orchestration of the ML and HiPSter workflow
- Learning of 3D point clouds instead of 2D images
- Conversion of the trained model into [ONNX standard]()


## Acknowledgement & Disclaimer {background-image="images/SPACE_acknowledgement_background.png"}


## References
